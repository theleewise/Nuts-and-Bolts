/* #MEDIAQUERIES
------------------------------------*/
@mixin mq($break, $type: min) {
	content: '#{type-of($break)}';
	@if (type-of($break) == 'string'){
		@if $type == max {
			$break: getBreak($break, max);
		} @else {
			$break: getBreak($break);
		}
	}
	@if $type == max {
		@media (max-width: ($break - 1px)) { @content; }
	} @else {
		@media (min-width: $break) { @content; }
	}
}


/* #ABSOLUTEFILL
------------------------------------*/
@mixin absolute-fill {
	display: block;
	height: 100%;
	left: 0;
	position: absolute;
	top: 0;
	width: 100%;
}


/* #ABSOLUTEPSEUDO
------------------------------------*/
@mixin psuedo-absolute {
	content: '';
	@include absolute-fill;
}


/* #ASPECTRATIO
------------------------------------*/
@mixin aspect-ratio($w:1,$h:1){
	position: relative;
	&:before {
		content: '';
		display: block;
		padding-top: ratioToPercent($w,$h);
	}
	> * {
		@include absolute-fill;
	}
}


/* #FLEXCENTER
------------------------------------*/
@mixin flex-center($h: true, $v: true) {
	display: flex;
	@if $h == true { align-items: center; }
	@if $v == true { justify-content: center; }
}


/* #CLEARCHILDREN
------------------------------------*/
@mixin clear-children($top:true, $bottom: true){
	@if($top = true){ > *:first-child { margin-top: 0; } }
	@if($bottom = true){ > *:last-child { margin-bottom: 0; } }
}


/* #TRIANGLE
------------------------------------*/
@mixin tri-arrow($size, $dir: right, $color: 'currentColor'){
	border: solid ($size / 2) transparent;
	@if $dir == left { border-right-color: $color; }
	@else if $dir == up { border-bottom-color: $color; }
	@else if $dir == down { border-top-color: $color; }
	@else if $dir == right { border-left-color: $color; }
}


/* #VISUALLYHIDDEN
------------------------------------*/
@mixin visually-hidden {
	clip-path: inset(1px 1px 1px 1px);
	height: 1px;
	overflow: hidden;
	position: absolute !important;
	width: 1px;
}


/* #IMAGES
------------------------------------*/
@mixin image-cover {
	background-position: center center;
	background-size: cover;
	background-repeat: no-repeat;
}

@mixin image-thumb {
	&:before {
		@include aspect-ratio; // defaults to square
		content: '';
		display: block;
	}
	@include flex-center;
	@include image-cover;
	background-color:  #eee;
}


/* #LISTS
------------------------------------*/
@mixin plain-list {
	margin: 0;
	padding: 0;
	li {
		margin: 0;
		list-style: none;
	}
}


/* #ANIMATIONS
------------------------------------*/
// This is to be used with Animate.css - https://daneden.github.io/animate.css/
@mixin animate($name, $speed: 1s, $delay: 0s, $infinite: false) {
	animation-name: $name;
	animation-duration: $speed;
	animation-delay: $delay;
	animation-fill-mode: both;
}


/* #SPACING
------------------------------------*/
@mixin block-center {
	margin-left: auto;
	margin-right: auto;
}


/* #SHOWHIDE
------------------------------------*/
@mixin hide($size, $dir: up, $force: false){
	@if $force { $i: ' !important'; } @else { $i: '';}
	@if $dir != up { $mq: $size + 'max' } @else { $mq: $size; }
	@include mq($mq){ display: none + $i; }
}
@mixin show($size, $dir: up, $force: false, $type: 'block'){
	@if $force { $i: ' !important'; } @else { $i: '';}
	@if $dir != up { $mq: $size + 'max' } @else { $mq: $size; }
	@include mq($mq){ display: $type + $i; }
}